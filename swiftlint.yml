disabled_rules:
  - trailing_whitespace
  - colon
  - type_body_length
  - notification_center_detachment
  - generic_type_name
  
opt_in_rules:
  - array_init
  - closure_body_length
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - convenience_type
  - discouraged_optional_boolean
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - empty_xctest_method
  - explicit_init
  - fallthrough
  - fatal_error_message
  - first_where
  - flatmap_over_map_reduce
  - force_unwrapping
  - identical_operands
  - implicitly_unwrapped_optional
  - joined_default_parameter
  - last_where
  - legacy_multiple
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - nimble_operator
  - non_overridable_class_declaration
  - nslocalizedstring_key
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - private_action
  - private_outlet
  - prefer_zero_over_explicit_init
  - prohibited_super_call
  - prohibited_interface_builder
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - required_enum_case
  - single_test_class
  - sorted_first_last
  - static_operator
  - strong_iboutlet
  - toggle_bool
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - xct_specific_matcher
  - vertical_whitespace_opening_braces

excluded:
  - Carthage
  - Pods
  - Source/UI/Extensions/UIImage+extension_icons.swift
  - Source/UI/Extensions/UIImage+extension_illustrations.swift
  - Source/UI/Extensions/UIColor+extension.swift
  - Source/UI/Extensions/UIFont+extension.swift
  - Source/Resources/R.generated.swift

analyzer_rules:
  - explicit_self
  - unused_declaration
  - unused_import
  
opening_brace:
  severity: warning
  ignore_multiline_statement_conditions: true

force_cast: warning
force_unwrapping: warning
force_try: warning

function_body_length:
  warning: 50
  error: 100

line_length: 120

file_length:
  warning: 300
  error: 500

closure_body_length:
  warning: 40
  error: 40

type_name:
  min_length: 1
  max_length: 40

identifier_name:
  min_length: 1
  max_length: 40
  
large_tuple:
  warning: 3
  error: 5
  
function_parameter_count:
  warning: 8
  error: 10
  
cyclomatic_complexity:
  warning: 8
  error: 20
  
nesting:
  type_level:
    warning: 4
    error: 8
    
custom_rules:
  # Избегаем многострочных комментариев /* ... */
  no_multiline_comments:
    name: "No Multiline Comments"
    regex: "/\\*[^*]*\\*+([^/*][^*]*\\*+)*/"
    match_kinds: comment
    message: "Use // instead of /* ... */ for comments."
    severity: warning
    
  # Избегаем !, используем == false
  no_negation_in_conditions:
    name: "No Negation in Conditions"
    regex: "(if|guard|while)\\s+([^\\{]*\\s+)?![a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)*\\s*([^\\{]*)\\s*(guard\\s+.*\\s+else\\s*)?\\{"
    message: "Use '== false' instead of '!' in conditions (e.g., 'if name.isEmpty == false')."
    severity: warning
    
  # Избегаем _Protocol_ в названиях протоколов
  no_protocol_suffix:
    name: "No 'protocol' in Protocol Names"
    regex: "protocol\\s+[a-zA-Z0-9_]*?(?i)protocol(?-i)[a-zA-Z0-9_]*"
    message: "Avoid using 'protocol' (in any case) in protocol names."
    severity: warning
    
  # Избегаем configure/set в именах методов, используем setup
  no_configure_or_set_in_methods:
    name: "No 'configure' or 'set' in Method Names"
    regex: "(func|private\\s+func)\\s+\\b(configure|set)\\b[a-zA-Z0-9_]*\\("
    excluded:
      - ".*(?i)(service|provider).*"  # Исключает файлы с Service или Provider в имени типа
    message: "Use 'setup' instead of 'configure' or 'set' in method names."
    severity: warning
    
  # Используем [] вместо [Type]()
  no_type_init_for_arrays:
    name: "No Type Init for Arrays"
    regex: "(let|var)\\s+[a-zA-Z0-9_]+\\s*=\\s*\\[+[a-zA-Z0-9_]+(?:\\.[a-zA-Z0-9_]+)*\\]+\\(\\)"
    message: "Use '[]' instead of '[Type]()' for array initialization."
    severity: warning
    
  # Избегание unowned
  no_unowned_in_closures:
    name: "No Unowned in Closures"
    regex: "\\[unowned\\s+self\\]"
    message: "Use '[weak self]' instead of 'unowned' in closures."
    severity: error
    
  # Свойства с get, set выделяем в приватные методы, если логика требует более одной строки
  property_get_set_single_line:
    name: "Property Get/Set Single Line"
    regex: "^\\s*(var|let)\\s+[a-zA-Z0-9_]+\\s*:\\s*[a-zA-Z0-9_]+\\s*\\{\\s*(get|set)\\s*\\{[^}]*\\n[^}]*\\}"
    message: "Properties with get/set should be single-line. Extract multi-line logic to a private method."
    severity: warning
    
  # Свойства с willSet, didSet выделяем в приватные методы, если логика требует более одной строки
  property_willset_didset_single_line:
    name: "Property WillSet/DidSet Single Line"
    regex: "(willSet|didSet)\\s*\\{[^}]*\\n[^}]*\\}"
    message: "WillSet and DidSet should be single-line. Extract multi-line logic to a private method."
    severity: warning
    
  # Избегаем эмодзи в коде
  no_emoji:
    name: "No Emoji"
    regex: "[\\x{1F300}-\\x{1F5FF}\\x{1F600}-\\x{1F64F}\\x{1F680}-\\x{1F6FF}\\x{1F900}-\\x{1F9FF}]"
    message: "Do not use emoji in code."
    severity: warning
    
warning_threshold: 1

reporter: "xcode"
